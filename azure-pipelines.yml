# Maven ...
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  name: AWS
  # demands:
  # - maven
  # - Agent.Version -gtVersion 2.163.1

steps:
- script: |
    java -version
  env:
    JAVA_HOME: $(JAVA_HOME)
    PATH: $(JAVA_HOME)/bin:$(PATH)
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    # jdkVersionOption: '11'
    # jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'
- task: CopyFiles@2
  inputs:
    # SourceFolder: '$(agent.builddirectory)'
    Contents: '**/*.war'
    TargetFolder: '$(build.artifactstagingdirectory)'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container' 
- task: SSH@0
  inputs:
    sshEndpoint: 'AWS-tomcat'
    runOptions: 'inline'
    inline: |
      scp -o StrictHostKeyChecking=no -r $(Build.ArtifactStagingDirectory)/drop/*.war root@3.80.132.91:/opt/tomcat/webapps/

- task: SSH@0
  inputs:
    sshEndpoint: 'AWS-tomcat'
    runOptions: 'inline'
    inline: |
      ssh -o StrictHostKeyChecking=no root@3.80.132.91 "sudo service tomcat restart"